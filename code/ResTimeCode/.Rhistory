baccount =  read.csv(file.choose(), header = TRUE)
str(baccount)
names(baccount)
summary(baccount)
attach(baccount)
shapiro.test(Residence.Time..hrs.)# p < .05, R.T. times are normally distributed
shapiro.test(logRT)# p < .05
logRT= log(Residence.Time..hrs.)#Graph region cannot appropriately capture the wide gradient of R.T. values. Transformation makes this clearer.
shapiro.test(logRT)# p < .05
shapiro.test(DAPI.Count)# p < .05, Total cell counts normally distributed
logcount=log(DAPI.Count)
plot(Residence.Time..hrs., DAPI.Count, xlab= "Residence Time (hours)", ylab= "Total Number of Cells Per Transect", main = "Population Sizes decrease with Residence Time",  cex= .8, col= "blue")
plot(logRT, logcount, xlab= "Log Residence Time (hours)", ylab= "Log Total Number of Cells Per Transect", main = "Population Sizes decrease with Residence Time",  cex= .8, col= "blue")
abline(lm(logcount ~ logRT))
reglogtotalnum= lm(formula= logcount ~ logRT)
summary(reglogtotalnum)$r.squared #y= -.47242x + 4.59627
text(x= ('4.00'), y= 5, paste("r-squared = ", round(summary(reglogtotalnum)$r.squared, 3)))
summary(reglogtotalnum)$r.squared #y= -.47242x + 4.59627
summary(reglogtotalnum)
summary(reglogtotalnum)$intercept
summary(reglogtotalnum)$(Intercept)
summary(reglogtotalnum)$Intercept
cor.test(logcount, logRT, method= "pearson")# p < .05, r -.922685
logRT= log10(Residence.Time..hrs.)#Graph region cannot appropriately capture the wide gradient of R.T. values. Transformation makes this clearer.
logRT= log10(Residence.Time..hrs.)#Graph region cannot appropriately capture the wide gradient of R.T. values. Transformation makes this clearer.
shapiro.test(logRT)# p < .05
logcount=log10(DAPI.Count)
shapiro.test(logcount)
logRT= log(Residence.Time..hrs.)#Graph region cannot appropriately capture the wide gradient of R.T. values. Transformation makes this clearer.
shapiro.test(logRT)# p < .05, data is parametric
#Use Pearson's Product Moment for correlation.
#R.T. Vs. Total Cell Count. Logarithmic Transformation
logcount=log(DAPI.Count)
shapiro.test(logcount)
plot(logRT, logcount, xlab= "Log Residence Time (hours)", ylab= "Log Total Number of Cells Per Transect", main = "Population Sizes decrease with Residence Time",  cex= .8, col= "blue")
plot(logRT, DAPI.Count, xlab= "Log Residence Time (hours)", ylab= "Log Total Number of Cells Per Transect", main = "Population Sizes decrease with Residence Time",  cex= .8, col= "blue")
abline(lm(logcount ~ logRT))
abline(lm(DAPI.Count ~ logRT))
logcount=log(DAPI.Count)
shapiro.test(logcount)
cor.test(logcount, logRT, method= "Spearman")# p < .05, r -.7494891
cor.test(logcount, logRT, method= "spearman")# p < .05, r -.7494891
cor.test(logcount, logRT, method= "kendall")# p < .05, r -.7494891
plot(logRT, logcount, xlab= "Ln Residence Time (hours)", ylab= "Ln Total Number of Cells Per Transect", main = "Population Sizes decrease with Residence Time",  cex= .8, col= "blue")
abline(lm(DAPI.Count ~ logRT))
plot(logRT, logcount, xlab= "Ln Residence Time (hours)", ylab= "Ln Total Number of Cells Per Transect", main = "Population Sizes decrease with Residence Time",  cex= .8, col= "blue")
abline(lm(logcount ~ logRT))
reglogtotalnum= lm(formula= logcount ~ logRT)
summary(reglogtotalnum)#y = - .3629x + 3.904
summary(reglogtotalnum)$r.squared #y= -.47242x + 4.59627
text(x= ('4.00'), y= 5, paste("r-squared = ", round(summary(reglogtotalnum)$r.squared, 3)))
text(x= ('4.00'), y= 4.5, labels ="y= -.3629x + 3.904")
cor.test(logcount, logRT, method= "kendall")# p < .05, r -.7494891
plot(logRT, residlogtotalnum, xlab= "Ln Residence Time", ylab= "Residual", main = "Resid. Plot.", abline(0,0))
residlogtotalnum= resid(reglogtotalnum)
plot(logRT, residlogtotalnum, xlab= "Ln Residence Time", ylab= "Residual", main = "Resid. Plot.", abline(0,0))
shapiro.test(X..Active)# p < .05, data is parametric, use pearson's product moment to test correlation
plot(logRT, X..Active, xlab= "Log Residence Time (hours)", ylab= "% of Active Cells Per Transect", main = "% Activity Declines with Residence Time",  cex= .8, col= "red")
abline(lm(X..Active ~ logRT))
cor.test(X..Active, logRT, method= "pearson")
regactive = lm(formula = (X..Active ~ logRT))
text(x= ('4.00'), y= 80, paste("r-squared = ", round(summary(regactive)$r.squared, 3)))
summary(regactive)
text(x= ('4.00'), y=20, labels = "y = -3.284x + 54.475 ")
shapiro.test(X..Active)# p < .05, data is parametric, use pearson's product moment to test correlation
plot(logRT, X..Active, xlab= "Log Residence Time (hours)", ylab= "% of Active Cells Per Transect", main = "% Activity Declines with Residence Time",  cex= .8, col= "red")
abline(lm(X..Active ~ logRT))
regactive = lm(formula = (X..Active ~ logRT))
summary(regactive)#y = -3.15x + 54.3021
text(x= ('4.00'), y= 80, paste("r-squared = ", round(summary(regactive)$r.squared, 3)))
text(x= ('4.00'), y=10, labels = "y = -3.284x + 54.475 ")
cor.test(X..Active, logRT, method= "pearson")
#p < .05, suggesting that there is a correlation between % active cells and Residence Time.
# r = - .4231026, suggesting a fairly weak but nonetheless present negative correlation.
#This supports the initial hypothesis in regards to the presence of correlation and the directionality
#However, the weakness of the correlation is somewhat surprising.
residactive= resid(regactive)
summary(residactive)
plot(logRT, residactive, xlab= "Residence Time", ylab= "Residual", main = "Resid. Plot for R.T.", abline(0,0))
#R.T. vs. Mortality
shapiro.test(X..Dead)# p < .05, data is parametric, use pearson's product moment.
plot(logRT, X..Dead, xlab= "Log Residence Time(hours)", ylab= "% of Dead Cells Per Transect", main= "Mortality Across Residence Time Gradient", cex = .8, col= "green")
abline(lm(X..Dead ~ logRT))
regdead= lm(formula= (X..Dead ~ logRT))
summary(regdead)
text(x= ('4.00'), y= 80, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
shapiro.test(X..Dead)# p > .05, data is non-parametric, use kendall's.
plot(logRT, X..Dead, xlab= "Log Residence Time(hours)", ylab= "% of Dead Cells Per Transect", main= "Mortality Across Residence Time Gradient", cex = .8, col= "green")
warnings()
abline(lm(X..Dead ~ logRT))
regdead= lm(formula= (X..Dead ~ logRT))
summary(regdead)#y= -1.2339x + 52.7133
text(x= ('4.50'), y= 20, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
text(x= ('3.80'), y= 20, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
shapiro.test(X..Dead)# p > .05, data is non-parametric, use kendall's.
plot(logRT, X..Dead, xlab= "Log Residence Time(hours)", ylab= "% of Dead Cells Per Transect", main= "Mortality Across Residence Time Gradient", cex = .8, col= "green")
warnings()
abline(lm(X..Dead ~ logRT))
regdead= lm(formula= (X..Dead ~ logRT))
summary(regdead)#y= -1.2339x + 52.7133
text(x= ('3.90'), y= 20, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
text(x= ('3.90'), y= 10, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
shapiro.test(X..Active)# p < .05, data is parametric, use pearson's product moment to test correlation
plot(logRT, X..Active, xlab= "Log Residence Time (hours)", ylab= "% of Active Cells Per Transect", main = "% Activity Declines with Residence Time",  cex= .8, col= "red")
abline(lm(X..Active ~ logRT))
regactive = lm(formula = (X..Active ~ logRT))
summary(regactive)#y = -3.15x + 54.3021
text(x= ('4.00'), y= 80, paste("r-squared = ", round(summary(regactive)$r.squared, 3)))
text(x= ('4.00'), y=10, labels = "y = -3.15x + 54.3021 ")
cor.test(X..Active, logRT, method= "pearson")
plot(logRT, X..Dead, xlab= "Log Residence Time(hours)", ylab= "% of Dead Cells Per Transect", main= "Mortality Across Residence Time Gradient", cex = .8, col= "green")
warnings()
abline(lm(X..Dead ~ logRT))
regdead= lm(formula= (X..Dead ~ logRT))
summary(regdead)#y= -1.2339x + 52.7133
text(x= ('3.90'), y= 10, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
text(x= ('1.00'), y=40, labels = "y= -1.2339x + 52.7133")
cor.test(X..Dead, logRT, method= "kendall")
regdead= lm(formula= (X..Dead ~ logRT))
summary(regdead)
residdead= resid(regdead)
summary(residdead)
plot(logRT, residdead, xlab= "Residence Time", ylab= "Residual", main = "Resid. Plot for R.T.", abline(0,0))
text(x= ('0.67'), y=40, labels = "y= -1.2339x + 52.7133")
text(x= ('0.67'), y=10, labels = "y= -1.2339x + 52.7133")
shapiro.test(X..Dead)# p > .05, data is non-parametric, use kendall's.
plot(logRT, X..Dead, xlab= "Log Residence Time(hours)", ylab= "% of Dead Cells Per Transect", main= "Mortality Across Residence Time Gradient", cex = .8, col= "green")
warnings()
abline(lm(X..Dead ~ logRT))
regdead= lm(formula= (X..Dead ~ logRT))
summary(regdead)#y= -1.2339x + 52.7133
text(x= ('3.90'), y= 10, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
text(x= ('0.67'), y=10, labels = "y= -1.2339x + 52.7133")
cor.test(X..Dead, logRT, method= "kendall")
plot(logRT, X..Dead, xlab= "Log Residence Time(hours)", ylab= "% of Dead Cells Per Transect", main= "Mortality Is Not Significantly Impacted By Residence Time", cex = .8, col= "green")
plot(logRT, X..Dead, xlab= "Log Residence Time(hours)", ylab= "% of Dead Cells Per Transect", main= "Mortality Is Not Correlated With Residence Time", cex = .8, col= "green")
abline(lm(X..Dead ~ logRT))
regdead= lm(formula= (X..Dead ~ logRT))
summary(regdead)#y= -1.2339x + 52.7133
text(x= ('3.90'), y= 10, paste("r-squared = ", round(summary(regdead)$r.squared, 3)))
text(x= ('0.67'), y=10, labels = "y= -1.2339x + 52.7133")
shapiro.test(X..Dormant)# p < .05, data is parametric.
plot(logRT, X..Dormant, xlab= "Log Residence Time(hours)", ylab= "% of Inactive Cells per Transect", main= "Dormancy Levels Across Residence Time Gradient", cex = .8)
abline(lm(X..Dormant ~ logRT))
text(x= ('4.00'), y= 80, paste("r-squared = ", round(summary(regdorm)$r.squared, 3)))
regdorm= lm(formula= (X..Dormant ~ logRT))
text(x= ('4.00'), y= 80, paste("r-squared = ", round(summary(regdorm)$r.squared, 3)))
text(x= ('4.00'), y= 90, paste("r-squared = ", round(summary(regdorm)$r.squared, 3)))
plot(logRT, X..Dormant, xlab= "Log Residence Time(hours)", ylab= "% of Inactive Cells per Transect", main= "Dormancy Levels Across Residence Time Gradient", cex = .8)
regdorm= lm(formula= (X..Dormant ~ logRT))
abline(lm(X..Dormant ~ logRT))
text(x= ('4.00'), y= 90, paste("r-squared = ", round(summary(regdorm)$r.squared, 3)))
text(x= ('4.00'), y=40, labels = "y= 3.284x + 45.525")
cor.test(X..Dormant, logRT, method= "pearson")
text(x= ('4.00'), y=10, labels = "y= 3.284x + 45.525")
text(x= ('4.00'), y=14, labels = "y= 3.284x + 45.525")
summary(regdorm)
logestimate= lm(DAPI.Count ~ logRT, data= baccount)
coef(logestimate)
plot(Residence.Time..hrs., DAPI.Count, xlab= "Log Residence Time (hours)", ylab= "Total Number of Cells Per Transect", main = "Population Sizes decrease with Residence Time",  cex= .8, col= "blue")
curve((-14.55014*log(x)+76.21212), add=TRUE, col = 2)
summary(reglogtotalnum)#y = - .3629x + 3.904
